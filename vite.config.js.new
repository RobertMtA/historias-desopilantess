// Configuraci√≥n para manejar rutas de cliente en Vite
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import fs from 'fs';
import path from 'path';

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [
    react(),
    // Plugin personalizado para manejar rutas de cliente
    {
      name: 'handle-client-routes',
      configureServer(server) {
        // Middleware para servir el index.html en rutas de cliente
        server.middlewares.use((req, res, next) => {
          // Si la URL no contiene una extensi√≥n y no es una llamada a la API
          if (
            !req.url.match(/\.\w+$/) && 
            !req.url.startsWith('/api/') &&
            !req.url.startsWith('/@') && 
            !req.url.startsWith('/node_modules/')
          ) {
            console.log(`üìù Redirigiendo ruta de cliente: ${req.url} a index.html`);
            req.url = '/';
          }
          next();
        });
      }
    }
  ],
  server: {
    port: 5173,
    open: true,
    // Configurar proxy para las peticiones a la API
    proxy: {
      '/api': {
        target: 'https://historias-desopilantes-production.up.railway.app',
        changeOrigin: true,
        secure: false,
        // Reescribir errores 404 en la API para evitar problemas
        configure: (proxy, _options) => {
          proxy.on('error', (err, _req, res) => {
            console.log('‚ùå Error de proxy:', err);
            if (!res.headersSent) {
              res.writeHead(200, {
                'Content-Type': 'application/json',
              });
              const storyId = _req.url.split('/')[3];
              
              if (_req.url.includes('/likes')) {
                res.end(JSON.stringify({
                  storyId: parseInt(storyId) || 0,
                  likes: 0,
                  hasLiked: false,
                  exists: false,
                  error: 'API_ERROR'
                }));
              } else if (_req.url.includes('/comments')) {
                res.end(JSON.stringify({
                  storyId: parseInt(storyId) || 0,
                  comments: [],
                  total: 0,
                  exists: false,
                  error: 'API_ERROR'
                }));
              } else {
                res.end(JSON.stringify({
                  error: 'API_ERROR',
                  message: 'Error de conexi√≥n con la API'
                }));
              }
            }
          });
        }
      }
    }
  },
  build: {
    outDir: 'dist',
    // Generar un archivo 404.html que redirija a index.html
    rollupOptions: {
      output: {
        manualChunks: {
          // Separar c√≥digo por caracter√≠sticas
          vendor: ['react', 'react-dom', 'react-router-dom'],
          ui: ['framer-motion', 'react-icons'],
        }
      }
    }
  }
});
